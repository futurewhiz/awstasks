<project name="awstasks-examples" basedir=".">

 <!-- PROPERTIES -->

 <property name="awstasks.classes" value="${basedir}/build/classes"/>
 <property name="awstasks.lib"     value="${basedir}/lib"/>
	 
 <property name="examples.credentials" value="../../dist/awstasks.properties" />
 <property name="examples.bucket"      value="awstasks-test"             />
 <property name="examples.bucket.copy" value="awstasks-test-copy"        />
 <property name="examples.dir"         value="${basedir}/runtime"        />

 <property file="${examples.credentials}" />

 <path id="classpath.compile" >
  <fileset dir="${awstasks.lib}" />
  <pathelement location="${awstasks.classes}" />
 </path>

 <taskdef name="S3list" classname="dak.ant.taskdefs.S3List">
  <classpath refid="classpath.compile"/>
 </taskdef>

 <taskdef name="S3copy" classname="dak.ant.taskdefs.S3Copy">
  <classpath refid="classpath.compile"/>
 </taskdef>

 <taskdef name="S3upload" classname="dak.ant.taskdefs.S3Upload">
  <classpath refid="classpath.compile"/>
 </taskdef>
	
 <taskdef name="S3download" classname="dak.ant.taskdefs.S3Download">
  <classpath refid="classpath.compile"/>
 </taskdef>

 <taskdef name="S3synchronize" classname="dak.ant.taskdefs.S3Synchronize">
  <classpath refid="classpath.compile" />
 </taskdef>
	
 <taskdef name="S3delete" classname="dak.ant.taskdefs.S3Delete">
  <classpath refid="classpath.compile"/>
 </taskdef>
	
 <typedef name="S3fileset" classname="dak.ant.types.S3FileSet">
  <classpath refid="classpath.compile"/>
 </typedef>

 <typedef name="S3file" classname="dak.ant.types.S3File">
  <classpath refid="classpath.compile"/>
 </typedef>

 <typedef name="key" classname="dak.ant.selectors.S3KeySelector">
  <classpath refid="classpath.compile"/>
 </typedef>
				
  <!-- NOTE: using an objectset with a refid requires the classes to be in the Ant path/home. 
             For seemingly obscure reasons (probably http://ant.apache.org/faq.html#delegating-classloader-1.6) 
             a typedef does not work.
   -->

 <S3fileset bucket="${examples.bucket}" id="configuration-files">
  <S3file key="*.config" />
 </S3fileset>
	
 <!-- LIST -->
		
 <target name="list-fileset-all">
  <S3list accessId="${aws.accessId}" secretKey="${aws.secretKey}" verbose="true">
   <S3fileset bucket="${examples.bucket}" />
  </S3list>
 </target>
		
 <target name="list-fileset-includes">
  <S3list accessId="${aws.accessId}" secretKey="${aws.secretKey}" verbose="true">
   <S3fileset bucket="${examples.bucket}" includes="**/*.bak" />
  </S3list>
 </target>
		
 <target name="list-fileset-date">
  <S3list accessId="${aws.accessId}" secretKey="${aws.secretKey}" verbose="true" outfile="${examples.dir}/list.txt" format="[%s][%s]" append="false">
   <S3fileset bucket="${examples.bucket}">
    <date when="before" datetime="2011-03-01" pattern="yyyy-MM-dd" />
   </S3fileset>
  </S3list>
 </target>

 <target name="list-fileset-patternset">
  <S3list accessId="${aws.accessId}" secretKey="${aws.secretKey}" verbose="true">
   <S3fileset bucket="${examples.bucket">
   	<patternset>
   	  <include name="**/*.jar"/>
   	</patternset>
   </S3fileset>
  </S3list>
 </target> 	

 <target name="list-fileset-regex-1.7">
  <S3list accessId="${aws.accessId}" secretKey="${aws.secretKey}" verbose="true">
   <S3fileset bucket="${examples.bucket}" includes="**/*.jar" >
    <key regex="org"  caseSensitive="true" />
   </S3fileset>
  </S3list>
 </target>
	
 <target name="list-fileset-regex-1.8">
  <fail message="A filename selector with regex attribute requires Ant 1.8 or higher">
   <condition>
 	<not>
 	 <contains string="${ant.version}" substring="1.8"/>
 	</not>
   </condition>
  </fail>

  <S3list accessId="${aws.accessId}" secretKey="${aws.secretKey}" verbose="true">
   <S3fileset bucket="${examples.bucket}" includes="**/*.jar" >
    <filename regex="org" />
   </S3fileset>
  </S3list>
 </target>
	
 <!-- COPY -->
	
 <target name="copy-fileset-all">
  <S3copy accessId="${aws.accessId}" secretKey="${aws.secretKey}" bucket="${examples.bucket.copy}" verbose="true">
   <S3fileset bucket="${examples.bucket}" />
  </S3copy>
 </target>

 <target name="copy-fileset-date">
  <S3copy accessId="${aws.accessId}" secretKey="${aws.secretKey}" bucket="${examples.bucket.copy}" dummyRun="true" verbose="true">
   <S3fileset bucket="${examples.bucket}" includes="**/*.jar" >
    <date when="before" datetime="2011-03-01" pattern="yyyy-MM-dd" />
   </S3fileset>
  </S3copy>
 </target>

 <target name="copy-fileset-regex-1.7">
  <S3copy accessId="${aws.accessId}" secretKey="${aws.secretKey}" bucket="${examples.bucket.copy}" dummyRun="true" verbose="true">
   <S3fileset bucket="${examples.bucket}" includes="**/*.jar" >
    <key regex="org" />
   </S3fileset>
  </S3copy>
 </target>

 <target name="copy-fileset-regex-1.8">
  <fail message="A filename selector with regex attribute requires Ant 1.8 or higher">
   <condition>
 	<not>
 	 <contains string="${ant.version}" substring="1.8"/>
 	</not>
   </condition>
  </fail>

 <S3copy accessId="${aws.accessId}" secretKey="${aws.secretKey}" bucket="${examples.bucket.copy}" dummyRun="true" verbose="true">
   <S3fileset bucket="${examples.bucket}" includes="**/*.jar" >
    <filename regex="org" />
   </S3fileset>
  </S3copy>
 </target>
	
 <!-- UPLOAD -->

 <target name="upload-new-or-changed">
  <S3upload verbose="true" 
  	        accessId="${aws.accessId}" 
            secretKey="${aws.secretKey}"
	        bucket="${examples.bucket}"
  	        upload="new,changed">
   <fileset dir="${examples.dir}/upload" includes="**/*" excludes="**/.DSStore" />
  </S3upload>
 </target>
	
 <!-- DOWNLOAD -->

 <target name="download-all">
  <S3download accessId="${aws.accessId}" secretKey="${aws.secretKey}" dir="${examples.dir}/download/all" download="all" verbose="true" dummyRun="true">
   <S3fileset bucket="${examples.bucket}" />
  </S3download>
 </target>
		
 <target name="download-includes">
  <S3download accessId="${aws.accessId}" secretKey="${aws.secretKey}" dir="${examples.dir}/download/includes" download="new,changed" verbose="true">
   <S3fileset bucket="${examples.bucket}" includes="**/*.jar" />
  </S3download>
 </target>

 <target name="download-excludes">
  <S3download accessId="${aws.accessId}" secretKey="${aws.secretKey}" dir="${examples.dir}/download/excludes" download="new,changed"  verbose="true">
   <S3fileset bucket="${examples.bucket}" excludes="**/*.jar" />
  </S3download>
 </target>

 <target name="download-list">
  <S3download accessId="${aws.accessId}" secretKey="${aws.secretKey}" dir="${examples.dir}/download/list" verbose="true">
   <S3fileset bucket="${examples.bucket}">
   	<S3file key="development.ecf" />
   </S3fileset>
  </S3download>
 </target>
	
 <target name="download-refid">
  <S3download accessId="${aws.accessId}" secretKey="${aws.secretKey}" dir="${examples.dir}/download/refid" verbose="true">
   <S3fileset refid="configuration-files" />
  </S3download>
 </target>
	
 <!-- SYNCHRONIZE -->

 <target name="synchronize-upload">
  <S3synchronize accessId="${aws.accessId}" 
  	             secretKey="${aws.secretKey}" 
                 bucket="${examples.bucket}"
                 direction="upload"
                 delete="false"
                 revert="false"
	             dummyRun="false"
  	             verbose="true" >
   <fileset dir="${examples.dir}/synchronize/upload" includes="**/*" excludes="**/.DSStore" />
  </S3synchronize>
 </target>

 <target name="synchronize-download">
  <S3synchronize accessId="${aws.accessId}" 
  	             secretKey="${aws.secretKey}" 
  	             bucket="${examples.bucket}"
  	             direction="download"
 	             delete="false"
 	             revert="false"
  	             dummyRun="false"
  	             verbose="true" >
   <fileset dir="${examples.dir}/synchronize/download" includes="**/*" excludes="**/.DSStore" />
  </S3synchronize>
 </target>

 <!-- DELETE -->

 <target name="delete-fileset">
  <S3delete accessId="${aws.accessId}" secretKey="${aws.secretKey}" verbose="true">
   <S3fileset bucket="${examples.bucket}" includes="**/*.bak" />
  </S3delete>
 </target>
		
 <target name="delete-regex">
  <S3delete accessId="${aws.accessId}" secretKey="${aws.secretKey}" dummyRun="true" verbose="true">
   <S3fileset bucket="provantage-development" includes="**/*.jar">
    <key regex="org" casesensitive="true" />
   </S3fileset> 	
  </S3delete>
 </target>

	
</project>
